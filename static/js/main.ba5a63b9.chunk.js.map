{"version":3,"sources":["components/Button/ButtonLink.js","components/Button/Button.js","components/Form/Checkbox.js","components/Form/TextInput.js","components/TodoList/TodoItem.js","components/TodoList/TodoList.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["ButtonLink","_ref","href","id","name","text","activeFilter","handleClick","react_default","a","createElement","className","cn","selected","onClick","Button","type","defaultProps","Checkbox","checked","handleChange","onChange","placeholder","handleBlur","TextInput","value","autoFocus","autoComplete","onBlur","TodoItem","_Component","Object","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","inputTitle","handleDoubleClick","title","setEditingId","props","setState","document","addEventListener","handleKeyup","e","code","removeEventListener","changeTitleTodo","target","sendChanges","preventDefault","_this$props","setTodoValue","trim","createClass","key","_this2","_this$props2","completed","toggleTodoStatus","editingTodoId","deleteTodo","editing","onSubmit","Checkbox_Checkbox","htmlFor","onDoubleClick","Button_Button","TextInput_TextInput","Component","TodoList","todoList","selectedAll","toggleTodoAllStatus","map","todo","index","TodoItem_TodoItem","assign","Header","handleInputChange","reset","sendTodo","addNewTodo","Footer","filterButtons","setFilter","clearComplited","hidden","filter","_ref2","ButtonLink_ButtonLink","some","todosFromServer","JSON","parse","localStorage","getItem","FILTER_TYPES","all","active","App","toConsumableArray","Date","parseInt","objectSpread2","checkSelectedAll","activeTodos","isSelectedAll","field","defineProperty","getFilteredTodos","_this$state","filteredTodos","setItem","stringify","_this$state2","filteredTodoList","Header_Header","TodoList_TodoList_TodoList","Footer_Footer","PureComponent","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.ba5a63b9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const ButtonLink = ({\n  href,\n  id,\n  name,\n  text,\n  activeFilter,\n  handleClick,\n}) => (\n  <a\n    id={id}\n    name={name}\n    href={href}\n    className={cn({ selected: id === activeFilter })}\n    onClick={handleClick}\n  >\n    {text}\n  </a>\n);\n\nButtonLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({\n  id,\n  name,\n  className,\n  text,\n  handleClick,\n}) => (\n  <button\n    id={id}\n    name={name}\n    type=\"button\"\n    className={className}\n    onClick={handleClick}\n  >\n    {text}\n  </button>\n\n);\n\nButton.defaultProps = {\n  text: '',\n};\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  handleClick: PropTypes.func.isRequired,\n\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Checkbox = ({\r\n  id,\r\n  name,\r\n  className,\r\n  checked,\r\n  handleChange,\r\n}) => (\r\n  <input\r\n    id={id}\r\n    name={name}\r\n    type=\"checkbox\"\r\n    checked={checked}\r\n    className={className}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n\r\nCheckbox.defaultProps = {\r\n  placeholder: '',\r\n  checked: false,\r\n  handleBlur: () => {},\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TextInput = ({\r\n  value,\r\n  id,\r\n  name,\r\n  className,\r\n  placeholder,\r\n  autoFocus,\r\n  handleChange,\r\n  handleBlur,\r\n}) => (\r\n  <input\r\n    value={value}\r\n    id={id}\r\n    name={name}\r\n    type=\"text\"\r\n    className={className}\r\n    placeholder={placeholder}\r\n    autoFocus={autoFocus}\r\n    autoComplete=\"off\"\r\n    onChange={handleChange}\r\n    onBlur={handleBlur}\r\n  />\r\n);\r\n\r\nTextInput.defaultProps = {\r\n  placeholder: '',\r\n  autoFocus: false,\r\n  handleBlur: () => {},\r\n};\r\n\r\nTextInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Button } from '../Button';\nimport { Checkbox, TextInput } from '../Form';\n\nexport class TodoItem extends Component {\n  state = {\n    inputTitle: '',\n  }\n\n\n  handleDoubleClick = (id, title) => {\n    const { setEditingId } = this.props;\n\n    this.setState({ inputTitle: title })\n    document.addEventListener('keyup', this.handleKeyup);\n    setEditingId(id)\n  }\n\n  handleKeyup =(e) => {\n    const { setEditingId } = this.props;\n\n    if (e.code === 'Escape') {\n      this.setState({ inputTitle: '' })\n      setEditingId();\n      document.removeEventListener('keyup', this.handleKeyup);\n    }\n  }\n\n  changeTitleTodo = ({ target }) => {\n    this.setState({ inputTitle: target.value });\n  }\n\n  sendChanges = (e) => {\n    e.preventDefault();\n\n    const { id, setTodoValue } = this.props;\n    const { inputTitle } = this.state;\n\n    if (inputTitle.trim().length > 0) {\n      setTodoValue(id, 'title', inputTitle.trim());\n    }\n\n    this.setState({ inputTitle: '' });\n  }\n\n  render() {\n    const {\n      title,\n      completed,\n      id,\n      toggleTodoStatus,\n      editingTodoId,\n      deleteTodo,\n    } = this.props;\n\n    const { inputTitle } = this.state;\n\n    return (\n      <li className={cn({\n        completed: completed && editingTodoId !== id,\n        editing: editingTodoId === id,\n      })}\n      >\n        <form onSubmit={this.sendChanges}>\n          <div className=\"view\">\n            <Checkbox \n              id={`${id}`}\n              name={`${id}`}\n              className=\"toggle\"\n              checked={completed}\n              handleChange={toggleTodoStatus}\n            />\n\n            <label\n              htmlFor={`edit-${id}`}\n              onDoubleClick={() => this.handleDoubleClick(id, title)}\n            >\n              {title}\n            </label>\n\n            <Button\n              id={`destroy-${id}`}\n              name={`destroy-${id}`}\n              className=\"destroy\"\n              handleClick={() => deleteTodo(id)}\n            />\n          </div>\n          {editingTodoId === id && (\n            <TextInput\n              className=\"edit\"\n              id={`edit-${id}`}\n              name={`edit-${id}`}\n              value={inputTitle}\n              autoFocus={true}\n              handleChange={this.changeTitleTodo}\n              handleBlur={this.sendChanges}\n            />\n          )}\n        </form>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { TodoItem } from './TodoItem';\nimport { Checkbox } from '../Form/Checkbox';\n\nexport const TodoList = ({\n  todoList,\n  editingTodoId,\n  selectedAll,\n  toggleTodoStatus,\n  toggleTodoAllStatus,\n  deleteTodo,\n  setEditingId,\n  setTodoValue,\n}) => (\n  <section className=\"main\">\n    <Checkbox \n      id=\"toggle-all\"\n      name=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={selectedAll}\n      handleChange={toggleTodoAllStatus}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todoList.map((todo, index) => (\n        <TodoItem\n          {...todo}\n          editingTodoId={editingTodoId}\n          toggleTodoStatus={toggleTodoStatus}\n          deleteTodo={deleteTodo}\n          setEditingId={setEditingId}\n          setTodoValue={setTodoValue}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  selectedAll: PropTypes.bool.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  toggleTodoAllStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '../Form';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n  }\n\n\n  handleInputChange =({ target }) => {\n    document.addEventListener('keyup', this.handleKeyup)\n    this.setState({ title: target.value });\n  }\n\n  handleKeyup =(e) => {\n    if (e.code === 'Escape') {\n      this.setState({ title: '' });\n      document.removeEventListener('keyup', this.handleKeyup);\n    }\n  }\n\n  reset = () => {\n    this.setState({ title: '' });\n  }\n\n  sendTodo = (e) => {\n    e.preventDefault();\n\n    const { addNewTodo } = this.props;\n    const { title } = this.state;\n\n    if (title.trim().length > 0) {\n      addNewTodo(title.trim());\n      this.reset();\n      document.removeEventListener('keyup', this.handleKeyup);\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.sendTodo}>\n          <TextInput \n            className=\"new-todo\"\n            id=\"new-todo\"\n            name=\"new-todo\"\n            value={title}\n            handleChange={this.handleInputChange}\n            handleBlur={this.sendTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { ButtonLink, Button } from '../Button';\n\nexport const Footer = ({\n  todoList,\n  filterButtons,\n  activeFilter,\n  setFilter,\n  clearComplited,\n}) => (\n  <footer className={cn('footer', { hidden: todoList.length === 0 })}>\n    <span className=\"todo-count\">\n      {`${todoList.filter(todo => !todo.completed).length} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      {filterButtons.map(({ type, href, text }) => (\n        <li key={type}>\n          <ButtonLink\n            href={href}\n            id={type}\n            text={text}\n            name={type}\n            activeFilter={activeFilter}\n            handleClick={setFilter}\n          />\n        </li>\n      ))}\n    </ul>\n    {todoList.some(todo => todo.completed) && (\n      <Button\n        id=\"clear-completed\"\n        name=\"clear-completed\"\n        className=\"clear-completed\"\n        text=\"Clear completed\"\n        handleClick={clearComplited}\n      />\n    )}\n  </footer>\n);\n\nFooter.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  filterButtons: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ),\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearComplited: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nconst todosFromServer = JSON.parse(localStorage.getItem('todos')) || [];\nconst FILTER_TYPES = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n}\nconst filterButtons = [\n  {\n    type: FILTER_TYPES.all,\n    href: '#/',\n    text: 'All',\n  },\n  {\n    type: FILTER_TYPES.active,\n    href: '#/active',\n    text: 'Active',\n  },\n  {\n    type: FILTER_TYPES.completed,\n    href: '#/completed',\n    text: 'Completed',\n  },\n];\n\nclass App extends PureComponent {\n  state = {\n    todoList: [...todosFromServer],\n    editingTodoId: 0,\n    activeFilter: FILTER_TYPES.all,\n    selectedAll: false,\n  }\n\n  componentDidMount() {\n    this.checkSelectedAll();\n  }\n\n  componentDidUpdate() {\n    const { todoList } = this.state;\n\n    localStorage.setItem('todos', JSON.stringify([...todoList]));\n    this.checkSelectedAll();\n  }\n\n  addNewTodo = (title) => {\n    this.setState(state => ({\n      todoList: [\n        ...state.todoList,\n        {\n          id: +new Date(),\n          title,\n          completed: false,\n        },\n      ],\n      activeFilter: FILTER_TYPES.all,\n      selectedAll: false,\n    }));\n  }\n\n  toggleTodoStatus = ({ target }) => {\n    const id = parseInt(target.id);\n\n    this.setState(state => ({\n      todoList: state.todoList.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n      selectedAll: false,\n    }), this.checkSelectedAll());\n\n    this.checkSelectedAll();\n  };\n\n  toggleTodoAllStatus = ({ target }) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => ({\n        ...todo,\n        completed: !state.selectedAll,\n      })),\n      selectedAll: !state.selectedAll,\n    }));\n  }\n\n  checkSelectedAll = () => {\n    const { todoList } = this.state;\n    const activeTodos = todoList.filter(todo => todo.completed).length\n    const isSelectedAll = (todoList.length !== 0) ? activeTodos === todoList.length : false;\n\n    this.setState({ selectedAll: isSelectedAll });\n  }\n\n  setEditingId =(id) => {\n    this.setState(state => ({\n      ...state,\n      editingTodoId: id || 0,\n    }));\n  }\n\n  setTodoValue = (id, field, value) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => (\n        todo.id === id\n          ? {\n            ...todo,\n            [field]: value,\n          }\n          : todo\n      )),\n      editingTodoId: 0,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: [...state.todoList].filter(todo => todo.id !== id),\n    }));\n  }\n\n  setFilter = (e) => {\n    e.preventDefault();\n\n    const { name } = e.target;\n\n    this.setState({ activeFilter: name });\n  }\n\n  getFilteredTodos = () => {\n    const { todoList, activeFilter } = this.state;\n    let filteredTodos = [...todoList];\n\n    if (activeFilter === FILTER_TYPES.completed) {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    if (activeFilter === FILTER_TYPES.active) {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    }\n\n    if (filteredTodos.length === 0) {\n      this.setState({ activeFilter: FILTER_TYPES.all })\n    };\n\n    return filteredTodos;\n  }\n\n  clearComplited = () => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const { todoList, editingTodoId, activeFilter, selectedAll } = this.state;\n    let filteredTodoList = this.getFilteredTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <Header addNewTodo={this.addNewTodo} />\n\n        <TodoList\n          todoList={filteredTodoList}\n          editingTodoId={editingTodoId}\n          selectedAll={selectedAll}\n          toggleTodoStatus={this.toggleTodoStatus}\n          toggleTodoAllStatus={this.toggleTodoAllStatus}\n          deleteTodo={this.deleteTodo}\n          setEditingId={this.setEditingId}\n          setTodoValue={this.setTodoValue}\n        />\n\n        <Footer\n          todoList={todoList}\n          filterButtons={filterButtons}\n          activeFilter={activeFilter}\n          setFilter={this.setFilter}\n          clearComplited={this.clearComplited}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}